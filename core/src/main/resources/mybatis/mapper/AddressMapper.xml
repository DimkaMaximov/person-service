<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="liga.medical.personservice.core.repository.AddressRepository">

    <resultMap id="addressEntity" type="liga.medical.personservice.core.model.AddressEntity" autoMapping="true">
        <id property="id" column="id" jdbcType="BIGINT"/>
    </resultMap>

    <select id="findAll" resultMap="addressEntity">
        SELECT *
        FROM address ORDER BY id;
    </select>

    <select id="findById" resultMap="addressEntity">
        SELECT *
        FROM address
        WHERE id = #{addressId};
    </select>

    <insert id="insertAll" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO address (contact_id, country_id, city, index, street, building, flat) VALUES
        <foreach collection="addressList" item="address" separator=",">
            (#{address.contactId}, #{address.countryId}, #{address.city},
            #{address.index}, #{address.street}, #{address.building}, #{address.flat})
        </foreach>
    </insert>

    <insert id="insert" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO address (contact_id, country_id, city, index, street, building, flat)
        VALUES (#{contactId}, #{countryId}, #{city},
                #{index}, #{street}, #{building}, #{flat});
    </insert>

        <update id="updateById" parameterType="liga.medical.personservice.core.model.AddressEntity" >
            <if test="address.id != null">
                UPDATE address SET
                <if test="address.contactId != null">
                    contact_id = #{address.contactId}
                </if>
                <if test="address.countryId != null">
                    country_id = #{address.countryId}
                </if>
                <if test="address.city != null">
                    city = #{address.city}
                </if>
                <if test="address.index != null">
                    index = #{address.index}
                </if>
                <if test="address.street != null">
                    street = #{address.street}
                </if>
                <if test="address.building != null">
                    building = #{address.building}
                </if>
                <if test="address.flat != null">
                    flat = #{address.flat}
                </if>
                WHERE id = #{address.id};
            </if>
        </update>

    <delete id="deleteById">
        DELETE
        FROM address
        WHERE id = #{addressId};
    </delete>
</mapper>